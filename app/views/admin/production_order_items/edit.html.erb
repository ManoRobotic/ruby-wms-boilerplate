<div class="w-full px-1 mt-12 mb-16 min-h-screen flex flex-col" data-responsive-right-margin="true">
  <div class="relative flex flex-col w-full px-6 text-gray-700 bg-white shadow-md lg:px-10 rounded-xl bg-clip-border flex-1">
    <div class="mt-8 relative p-4 text-gray-700 bg-white bg-clip-border flex flex-col flex-grow">
      
      <!-- Header -->
      <div class="flex flex-col gap-3 mb-6 lg:flex-row lg:items-center lg:justify-between">
        <div class="flex-1">
          <h1 class="text-lg font-semibold text-gray-900 mb-1">
            Editar Consecutivo: <%= @production_order_item.folio_consecutivo %>
          </h1>
          <p class="text-sm text-gray-600">
            Orden: <%= @production_order.no_opro || @production_order.order_number %> - <%= @production_order.product.name %>
          </p>
          <p class="text-xs text-gray-500">
            Lote: <%= @production_order.lote_referencia %>
          </p>
        </div>
        
        <div class="flex gap-2 shrink-0">
          <%= link_to admin_production_order_path(@production_order), 
              class: "px-3 py-1.5 text-xs font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 flex items-center gap-1" do %>
            <%= icon('fa-solid', 'arrow-left', class: 'w-3 h-3') %>
            Volver a la Orden
          <% end %>
        </div>
      </div>

      <!-- Form -->
      <%= form_with model: [@production_order, @production_order_item], 
          local: true, 
          data: { controller: "form-validation" },
          class: "space-y-6" do |form| %>
        
        <% if @production_order_item.errors.any? %>
          <div class="bg-red-50 border border-red-200 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <%= icon('fa-solid', 'exclamation-triangle', class: 'w-5 h-5 text-red-400') %>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">
                  <%= pluralize(@production_order_item.errors.count, "error") %> impidieron guardar el consecutivo:
                </h3>
                <div class="mt-2 text-sm text-red-700">
                  <ul class="list-disc space-y-1 pl-5">
                    <% @production_order_item.errors.full_messages.each do |message| %>
                      <li><%= message %></li>
                    <% end %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        <% end %>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <!-- Información Básica -->
          <div class="bg-emerald-50 rounded-xl p-6 shadow-sm">
            <h3 class="text-base font-semibold text-emerald-900 mb-4">Información Básica</h3>
            
            <div class="space-y-4">
              <div>
                <%= form.label :folio_consecutivo, "Folio Consecutivo", class: "block text-sm font-medium text-emerald-700 mb-1" %>
                <%= form.text_field :folio_consecutivo, 
                    class: "block w-full text-sm rounded-lg border-emerald-300 focus:border-emerald-500 focus:ring-emerald-500 bg-gray-50",
                    readonly: true %>
                <p class="text-xs text-emerald-600 mt-1">El folio no puede ser modificado</p>
              </div>

              <div>
                <%= form.label :status, "Estado", class: "block text-sm font-medium text-emerald-700 mb-1" %>
                <%= form.select :status, 
                    options_for_select(ProductionOrderItem::ITEM_STATUSES.map { |s| [s.humanize, s] }, @production_order_item.status),
                    { prompt: "Seleccionar estado" },
                    { class: "block w-full text-sm rounded-lg border-emerald-300 focus:border-emerald-500 focus:ring-emerald-500" } %>
              </div>
            </div>
          </div>

          <!-- Especificaciones del Producto -->
          <div class="bg-blue-50 rounded-xl p-6 shadow-sm">
            <h3 class="text-base font-semibold text-blue-900 mb-4">Especificaciones del Producto</h3>
            
            <div class="space-y-4">
              <div>
                <%= form.label :micras, "Micras", class: "block text-sm font-medium text-blue-700 mb-1" %>
                <%= form.number_field :micras, 
                    class: "block w-full text-sm rounded-lg border-blue-300 focus:border-blue-500 focus:ring-blue-500",
                    placeholder: "35",
                    min: 1 %>
              </div>

              <div>
                <%= form.label :ancho_mm, "Ancho (mm)", class: "block text-sm font-medium text-blue-700 mb-1" %>
                <%= form.number_field :ancho_mm, 
                    class: "block w-full text-sm rounded-lg border-blue-300 focus:border-blue-500 focus:ring-blue-500",
                    placeholder: "420",
                    min: 1 %>
              </div>

              <div>
                <%= form.label :altura_cm, "Altura Core (cm)", class: "block text-sm font-medium text-blue-700 mb-1" %>
                <%= form.number_field :altura_cm, 
                    class: "block w-full text-sm rounded-lg border-blue-300 focus:border-blue-500 focus:ring-blue-500",
                    placeholder: "7.5",
                    step: 0.1,
                    min: 0 %>
                <p class="text-xs text-blue-600 mt-1">Se usa para calcular el peso del core</p>
              </div>
            </div>
          </div>

          <!-- Pesos -->
          <div class="bg-orange-50 rounded-xl p-6 shadow-sm">
            <h3 class="text-base font-semibold text-orange-900 mb-4">Control de Pesos</h3>
            
            <div class="space-y-4">
              <div>
                <%= form.label :peso_bruto, "Peso Bruto (kg)", class: "block text-sm font-medium text-orange-700 mb-1" %>
                <%= form.number_field :peso_bruto, 
                    class: "block w-full text-sm rounded-lg border-orange-300 focus:border-orange-500 focus:ring-orange-500",
                    placeholder: "0.00",
                    step: 0.01,
                    min: 0,
                    data: { action: "input->form-validation#calculateWeights" } %>
                <p class="text-xs text-orange-600 mt-1">Peso directo de la báscula</p>
              </div>

              <div>
                <%= form.label :peso_core_gramos, "Peso Core (gramos)", class: "block text-sm font-medium text-orange-700 mb-1" %>
                <%= form.number_field :peso_core_gramos, 
                    class: "block w-full text-sm rounded-lg border-orange-300 focus:border-orange-500 focus:ring-orange-500",
                    placeholder: "150",
                    min: 0,
                    data: { action: "input->form-validation#calculateWeights" } %>
                <p class="text-xs text-orange-600 mt-1">Se resta del peso bruto para calcular peso neto</p>
              </div>

              <div>
                <%= form.label :peso_neto, "Peso Neto (kg)", class: "block text-sm font-medium text-orange-700 mb-1" %>
                <%= form.number_field :peso_neto, 
                    class: "block w-full text-sm rounded-lg border-orange-300 focus:border-orange-500 focus:ring-orange-500 bg-gray-50",
                    placeholder: "0.00",
                    step: 0.01,
                    readonly: true %>
                <p class="text-xs text-orange-600 mt-1">Se calcula automáticamente: Peso Bruto - (Peso Core / 1000)</p>
              </div>
            </div>
          </div>

          <!-- Metros Lineales -->
          <div class="bg-purple-50 rounded-xl p-6 shadow-sm">
            <h3 class="text-base font-semibold text-purple-900 mb-4">Metros Lineales</h3>
            
            <div class="space-y-4">
              <div>
                <%= form.label :metros_lineales, "Metros Lineales", class: "block text-sm font-medium text-purple-700 mb-1" %>
                <%= form.number_field :metros_lineales, 
                    class: "block w-full text-sm rounded-lg border-purple-300 focus:border-purple-500 focus:ring-purple-500 bg-gray-50",
                    placeholder: "0.0000",
                    step: 0.0001,
                    readonly: true %>
                <p class="text-xs text-purple-600 mt-1">Se calcula automáticamente usando la fórmula:<br>
                  <code class="text-xs">((Peso neto * 1,000,000) / micras / ancho mm / 0.92)</code>
                </p>
              </div>
              
              <div class="bg-white rounded-lg p-3 border border-purple-200">
                <h4 class="text-sm font-medium text-purple-800 mb-2">Valores Actuales:</h4>
                <div class="text-xs text-purple-700 space-y-1">
                  <div><strong>Peso Neto:</strong> <%= @production_order_item.peso_neto&.round(3) || 0 %> kg</div>
                  <div><strong>Metros:</strong> <%= @production_order_item.metros_lineales&.round(4) || 0 %> m</div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Submit buttons -->
        <div class="flex justify-end gap-3 pt-6 border-t">
          <%= link_to admin_production_order_path(@production_order), 
              class: "px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50" do %>
            Cancelar
          <% end %>
          <%= form.submit "Actualizar Consecutivo", 
              class: "px-4 py-2 text-sm font-medium text-white bg-emerald-600 border border-transparent rounded-md hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const pesoBrutoInput = document.querySelector('input[name="production_order_item[peso_bruto]"]');
  const pesoCoreInput = document.querySelector('input[name="production_order_item[peso_core_gramos]"]');
  const pesoNetoInput = document.querySelector('input[name="production_order_item[peso_neto]"]');
  const micrasInput = document.querySelector('input[name="production_order_item[micras]"]');
  const anchoInput = document.querySelector('input[name="production_order_item[ancho_mm]"]');
  const metrosInput = document.querySelector('input[name="production_order_item[metros_lineales]"]');

  function calculateValues() {
    const pesoBruto = parseFloat(pesoBrutoInput.value) || 0;
    const pesoCore = parseFloat(pesoCoreInput.value) || 0;
    const micras = parseFloat(micrasInput.value) || 0;
    const ancho = parseFloat(anchoInput.value) || 0;

    // Calcular peso neto
    const pesoNeto = pesoBruto - (pesoCore / 1000);
    pesoNetoInput.value = pesoNeto.toFixed(3);

    // Calcular metros lineales
    if (pesoNeto > 0 && micras > 0 && ancho > 0) {
      const metros = (pesoNeto * 1000000) / micras / ancho / 0.92;
      metrosInput.value = metros.toFixed(4);
    } else {
      metrosInput.value = '';
    }
  }

  // Event listeners
  [pesoBrutoInput, pesoCoreInput, micrasInput, anchoInput].forEach(input => {
    if (input) {
      input.addEventListener('input', calculateValues);
    }
  });

  // Initial calculation if values are present
  calculateValues();
});
</script>