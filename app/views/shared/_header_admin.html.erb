<div class="bg-gray-100">
    <!-- Botón para abrir/cerrar el sidebar -->
    <button id="sidebarToggle" type="button" class="fixed z-50 inline-flex items-center p-2 mt-3 ml-5 text-sm text-gray-500 rounded-lg lg:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
        <span class="sr-only"><%= t('admin.sidebar.open') %></span>
        <svg class="w-6 h-6" aria-hidden="true" fill="gray" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path clip-rule="evenodd" fill-rule="evenodd" d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"></path>
        </svg>
    </button>

    <!-- Sidebar -->
    <nav id="default-sidebar" class="fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full lg:translate-x-0" aria-label="Sidebar">
        <div class="flex flex-col justify-between h-full px-3 py-4 overflow-y-auto bg-gray-800 rounded-r-lg md:rounded-none">
            <ul class="mt-16 space-y-2 font-medium text-white">
                <% [
                    { path: admin_path, icon: 'gauge-high', label: t('admin.sidebar.dashboard') },
                    { path: admin_orders_path, icon: 'truck-fast', label: t('admin.sidebar.orders') },
                    { path: admin_products_path, icon: 'cart-shopping', label: t('admin.sidebar.products') },
                    { path: admin_categories_path, icon: 'list', label: t('admin.sidebar.categories') },
                    { path: admin_warehouses_path, icon: 'warehouse', label: t('admin.sidebar.warehouses') },
                    { path: admin_tasks_path, icon: 'tasks', label: t('admin.sidebar.tasks') },
                    { path: admin_pick_lists_path, icon: 'clipboard-list', label: t('admin.sidebar.pick_lists') },
                    { path: admin_inventory_transactions_path, icon: 'arrow-right-arrow-left', label: t('admin.sidebar.inventory_transactions') },
                    { path: admin_receipts_path, icon: 'truck-ramp-box', label: t('admin.sidebar.receipts') },
                    { path: admin_cycle_counts_path, icon: 'calculator', label: t('admin.sidebar.cycle_counts') },
                    { path: admin_shipments_path, icon: 'shipping-fast', label: t('admin.sidebar.shipments') },
                    { path: admin_manual_printing_path, icon: 'print', label: t('admin.sidebar.manual_printing') }
                ].each do |item| %>
                    <li>
                        <%= link_to item[:path], class: "flex items-center p-3 rounded-lg hover:bg-gray-700 #{'bg-gray-700' if current_page?(item[:path])} sidebar-item" do %>
                            <%= icon('fa-solid', item[:icon], class: 'w-5 h-5 mr-2') %> 
                            <span><%= item[:label] %></span>
                        <% end %>
                    </li>
                <% end %>

                <div class="my-2 border-t border-gray-600"></div>
                <!-- Botón de cerrar sesión -->
                <div class="mt-0 text-white lg:mt-auto">
                    <%= form_with url: destroy_admin_session_path, method: :delete, class: 'inline' do %>
                        <button type="submit" class="flex items-center w-full p-3 rounded-lg hover:bg-gray-700" data-confirm="<%= t('admin.sidebar.logout_confirm') %>">
                            <%= icon('fa-solid', 'sign-out', class: 'w-5 h-5 mr-2') %> 
                            <span><%= t('admin.sidebar.logout') %></span>
                        </button>
                    <% end %>
                </div>
            </ul>
        </div>
    </nav>
</div>


<script>
    function initializeSidebar() {
        const sidebar = document.getElementById("default-sidebar");
        const toggleButton = document.getElementById("sidebarToggle");
        const content = document.querySelector("main");
        const sidebarLinks = document.querySelectorAll(".sidebar-item");

        if (!sidebar || !toggleButton || !content) return;

        let isSidebarOpen = localStorage.getItem("sidebarOpen") === "true" || window.innerWidth >= 1024;

        const updateSidebarState = () => {
            sidebar.classList.toggle("-translate-x-full", !isSidebarOpen);
            content.classList.toggle("lg:ml-64", isSidebarOpen);
            localStorage.setItem("sidebarOpen", isSidebarOpen);
        };

        const closeSidebarOnMobile = () => {
            if (window.innerWidth < 1024 && isSidebarOpen) {
                isSidebarOpen = false;
                updateSidebarState();
            }
        };

        if (!toggleButton.hasAttribute("data-initialized")) {
            toggleButton.addEventListener("click", (event) => {
                event.stopPropagation();
                isSidebarOpen = !isSidebarOpen;
                updateSidebarState();
            });

            sidebarLinks.forEach((link) => link.addEventListener("click", closeSidebarOnMobile));

            document.addEventListener("click", (event) => {
                if (window.innerWidth < 1024 && isSidebarOpen && !sidebar.contains(event.target) && event.target !== toggleButton) {
                    closeSidebarOnMobile();
                }
            });

            window.addEventListener("resize", () => {
                isSidebarOpen = window.innerWidth >= 1024 || localStorage.getItem("sidebarOpen") === "true";
                updateSidebarState();
            });

            window.addEventListener("scroll", closeSidebarOnMobile);

            toggleButton.setAttribute("data-initialized", "true");
        }

        updateSidebarState();
    }

    document.addEventListener("DOMContentLoaded", initializeSidebar);
    document.addEventListener("turbo:load", initializeSidebar);
</script>
